name: .NET Core Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      run: dotnet publish HeatingDaemon/HeatingMqttService/HeatingMqttService.csproj -c Release -r linux-arm --self-contained false /p:PublishSingleFile=true /p:DebugType=none

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: HeatingMqttService-linux-arm
        path: |
            **/bin/Release/net8.0/linux-arm/publish/
    - name: Delete latest Release
      run: gh release delete latest --cleanup-tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest
        release_name: Release latest
        draft: false
        prerelease: true

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: |
                  **/bin/Release/net8.0/linux-arm/publish/
        asset_name: HeatingMqttService-linux-arm.zip
        asset_content_type: application/zip
